<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="11" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="5794" started-at="2022-03-25T00:28:38 IST" finished-at="2022-03-25T00:28:44 IST">
    <groups>
      <group name="testone">
        <method signature="multipletestcaseTest.aplhaone()[pri:0, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="aplhaone" class="testngsample.multipletestcaseTest"/>
        <method signature="multipletestcaseTest.betaaone()[pri:0, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="betaaone" class="testngsample.multipletestcaseTest"/>
        <method signature="multipletestcaseTest.gamaone()[pri:0, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="gamaone" class="testngsample.multipletestcaseTest"/>
      </group> <!-- testone -->
      <group name="test">
        <method signature="multipletestcaseTest.alpha()[pri:1, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="alpha" class="testngsample.multipletestcaseTest"/>
        <method signature="multipletestcaseTest.beta()[pri:1, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="beta" class="testngsample.multipletestcaseTest"/>
        <method signature="multipletestcaseTest.gama()[pri:1, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="gama" class="testngsample.multipletestcaseTest"/>
      </group> <!-- test -->
    </groups>
    <test name="Surefire test" duration-ms="5794" started-at="2022-03-25T00:28:38 IST" finished-at="2022-03-25T00:28:44 IST">
      <class name="testngsample.DependentTest">
        <test-method status="PASS" signature="driversetup()[pri:0, instance:testngsample.DependentTest@2d8f65a4]" name="driversetup" duration-ms="5697" started-at="2022-03-25T00:28:38 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driversetup -->
        <test-method status="FAIL" signature="geturl()[pri:0, instance:testngsample.DependentTest@2d8f65a4]" name="geturl" duration-ms="34" started-at="2022-03-25T00:28:44 IST" depends-on-methods="testngsample.DependentTest.driversetup" finished-at="2022-03-25T00:28:44 IST">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument
  (Session info: chrome=99.0.4844.82)
Build info: version: '4.0.0-rc-3', revision: '5fe1af712f'
System info: host: 'LAPTOP-DGIF1VTS', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1fcffcc137ef938c3f5dfa5f8df66c60, get {url=www.facbook.com}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.82, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\Surbhi\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:55423}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55423/devtoo..., se:cdpVersion: 99.0.4844.82, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1fcffcc137ef938c3f5dfa5f8df66c60]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument
  (Session info: chrome=99.0.4844.82)
Build info: version: '4.0.0-rc-3', revision: '5fe1af712f'
System info: host: 'LAPTOP-DGIF1VTS', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1fcffcc137ef938c3f5dfa5f8df66c60, get {url=www.facbook.com}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.82, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\Surbhi\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:55423}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55423/devtoo..., se:cdpVersion: 99.0.4844.82, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1fcffcc137ef938c3f5dfa5f8df66c60
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:328)
at testngsample.DependentTest.geturl(DependentTest.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- geturl -->
        <test-method status="SKIP" signature="gettitle()[pri:0, instance:testngsample.DependentTest@2d8f65a4]" name="gettitle" duration-ms="0" started-at="2022-03-25T00:28:44 IST" depends-on-methods="testngsample.DependentTest.geturl" finished-at="2022-03-25T00:28:44 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependentTest.gettitle()[pri:0, instance:testngsample.DependentTest@2d8f65a4] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependentTest.gettitle()[pri:0, instance:testngsample.DependentTest@2d8f65a4] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettitle -->
      </class> <!-- testngsample.DependentTest -->
      <class name="testngsample.HierarchyTest">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="beforesuite" is-config="true" duration-ms="10" started-at="2022-03-25T00:28:38 IST" finished-at="2022-03-25T00:28:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="beforetest" is-config="true" duration-ms="1" started-at="2022-03-25T00:28:38 IST" finished-at="2022-03-25T00:28:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="beforemethod" is-config="true" duration-ms="1" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="beforeclass" is-config="true" duration-ms="0" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="aftermethod" is-config="true" duration-ms="1" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="test()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="test" duration-ms="0" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="afterclass()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="afterclass" is-config="true" duration-ms="0" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method status="PASS" signature="aftertest()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="aftertest" is-config="true" duration-ms="0" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:testngsample.HierarchyTest@6f195bc3]" name="aftersuite" is-config="true" duration-ms="1" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testngsample.HierarchyTest -->
      <class name="testngsample.classoneTest">
        <test-method status="PASS" signature="testmeothod()[pri:0, instance:testngsample.classoneTest@167fdd33]" name="testmeothod" duration-ms="2" started-at="2022-03-25T00:28:38 IST" finished-at="2022-03-25T00:28:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testmeothod -->
      </class> <!-- testngsample.classoneTest -->
      <class name="testngsample.multipletestcaseTest">
        <test-method status="PASS" signature="aplhaone()[pri:0, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="aplhaone" duration-ms="0" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aplhaone -->
        <test-method status="PASS" signature="betaaone()[pri:0, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="betaaone" duration-ms="1" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betaaone -->
        <test-method status="PASS" signature="gamaone()[pri:0, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="gamaone" duration-ms="0" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gamaone -->
        <test-method status="PASS" signature="alpha()[pri:1, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="alpha" duration-ms="0" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alpha -->
        <test-method status="PASS" signature="beta()[pri:1, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="beta" duration-ms="1" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beta -->
        <test-method status="PASS" signature="gama()[pri:1, instance:testngsample.multipletestcaseTest@1a8a8f7c]" name="gama" duration-ms="1" started-at="2022-03-25T00:28:44 IST" finished-at="2022-03-25T00:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gama -->
      </class> <!-- testngsample.multipletestcaseTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
